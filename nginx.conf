http {
  server {
    listen 80;

    location / {
      resolver 8.8.8.8; # DNS resolver for resolving target domain names

      # Construct the full URL dynamically
      set $target $http_host$request_uri;

      # Proxy pass to the target URL
      proxy_pass $scheme://$target;

      # Clear the Host header to prevent NGINX from modifying it
      proxy_set_header Host $http_host;

      # Optional: Set additional headers for transparency
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
    }
  }

  server {
    listen 443 ssl;

    # Path to the SSL certificate and key
    ssl_certificate /path/to/your/certificate.crt;
    ssl_certificate_key /path/to/your/private.key;

    location / {
      resolver 8.8.8.8; # DNS resolver for resolving target domain names

      # Construct the full URL dynamically
      set $target $http_host$request_uri;

      # Proxy pass to the target URL
      proxy_pass $scheme://$target;

      # Clear the Host header to prevent NGINX from modifying it
      proxy_set_header Host $http_host;

      # Optional: Set additional headers for transparency
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
    }
  }
}

events {
  worker_connections 1024;
}